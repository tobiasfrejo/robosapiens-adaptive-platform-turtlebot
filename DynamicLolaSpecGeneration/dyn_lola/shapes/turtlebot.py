tb3_corners = [
    ( 0.0685, 0.153),
    (-0.1965, 0.153),
    (-0.1965,-0.153),
    ( 0.0685,-0.153),
]

def tb3_corners_offset(offset_value:float):
    def offset(v, n):
        return v+n if 0 < v else v-n

    return [
        (offset(x, offset_value), offset(y, offset_value))
        for x, y in tb3_corners
    ]

turtle_map = [
 (-1.777371975, -2.0015),
 (-1.396721025, -2.0015),
 (-1.08581805, -2.54),
 (1.08581805, -2.54),
 (1.396721025, -2.0015),
 (1.777371975, -2.0015),
 (2.6298814, -0.5249096735082707),
 (2.3268248, 0.0),
 (2.6298814, 0.5249096735082707),
 (1.777371975, 2.0015),
 (1.396721025, 2.0015),
 (1.08581805, 2.54),
 (-1.08581805, 2.54),
 (-1.396721025, 2.0015),
 (-1.396721025, 2.0015),
 (-1.777371975, 2.0015),
 (-2.932938, 0.0)
]

turtle_map_convex = [
    [
        (-1.777371975, -2.0015),
        (-1.396721025, -2.0015),
        (-1.396721025, 2.0015),
        (-1.777371975, 2.0015),
        (-2.932938, 0.0)
    ], [
        (-1.396721025, -2.0015),
        (-1.08581805, -2.54),
        (1.08581805, -2.54),
        (1.396721025, -2.0015),
        (2.3268248, 0.0),
        (1.396721025, 2.0015),
        (1.08581805, 2.54),
        (-1.08581805, 2.54),
        (-1.396721025, 2.0015),
    ],
    [
        (1.396721025, -2.0015),
        (1.777371975, -2.0015),
        (2.6298814, -0.5249096735082707),
        (2.3268248, 0.0),
    ],
    [
        (2.3268248, 0.0),
        (2.6298814, 0.5249096735082707),
        (1.777371975, 2.0015),
        (1.396721025, 2.0015),
    ]
]

turtle_map_pillars = [
    ((-1.1,  -1.1),  0.15),
    ((-1.1,   0.0),  0.15),
    ((-1.1,   1.1),  0.15),
    (( 0.0,  -1.1),  0.15),
    (( 0.0,   0.0),  0.15),
    (( 0.0,   1.1),  0.15),
    (( 1.1,  -1.1),  0.15),
    (( 1.1,   0.0),  0.15),
    (( 1.1,   1.1),  0.15),
    (( 0.0,  -2.0),  0.15),
]