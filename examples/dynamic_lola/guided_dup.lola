// Notation follows "Using temporal logic to specify adaptive program semantics" paper
in x
in T
out R
out S
out result
// Guided adaptation:
// Old spec is just S = x
S = x
// R is Rcond, where the cond is "x == 3"
R = when(T) && (x == 3 || R[-1, false]) // Eventually, after T was not Unknown
// When we haven't received a new spec T, and R is not true, yield from old spec
// Note: the when below is technically redundant
result = if !(when(T) && R) then S else defer(T)
