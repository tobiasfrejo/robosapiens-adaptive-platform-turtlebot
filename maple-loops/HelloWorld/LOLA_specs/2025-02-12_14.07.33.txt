Model: LOLASpecification { input_vars: [VarName("stage")], output_vars: [VarName("m"), VarName("a"), VarName("p"), VarName("l"), VarName("e"), VarName("maple"), VarName("globallymaple"), VarName("stageout")], exprs: {VarName("a"): BinOp(Eq(Var(VarName("stage")), Val(Str("a"))), Index(Var(VarName("m")), -1, Bool(false)), BOp(And)), VarName("e"): BinOp(Eq(Var(VarName("stage")), Val(Str("e"))), Index(Var(VarName("l")), -1, Bool(false)), BOp(And)), VarName("globallymaple"): BinOp(Var(VarName("maple")), Index(Var(VarName("maple")), -1, Bool(true)), BOp(And)), VarName("l"): BinOp(Eq(Var(VarName("stage")), Val(Str("l"))), Index(Var(VarName("p")), -1, Bool(false)), BOp(And)), VarName("m"): BinOp(Eq(Var(VarName("stage")), Val(Str("m"))), BinOp(Index(Var(VarName("e")), -1, Bool(true)), Index(Var(VarName("a")), -1, Bool(false)), BOp(Or)), BOp(And)), VarName("maple"): BinOp(BinOp(BinOp(BinOp(Var(VarName("m")), Var(VarName("a")), BOp(Or)), Var(VarName("p")), BOp(Or)), Var(VarName("l")), BOp(Or)), Var(VarName("e")), BOp(Or)), VarName("p"): BinOp(Eq(Var(VarName("stage")), Val(Str("p"))), BinOp(Index(Var(VarName("a")), -1, Bool(false)), Index(Var(VarName("l")), -1, Bool(false)), BOp(Or)), BOp(And)), VarName("stageout"): Var(VarName("stage"))}, type_annotations: {VarName("a"): Bool, VarName("e"): Bool, VarName("globallymaple"): Bool, VarName("l"): Bool, VarName("m"): Bool, VarName("maple"): Bool, VarName("p"): Bool, VarName("stage"): Str, VarName("stageout"): Str} }
a[0] = Bool(false)
e[0] = Bool(false)
globallymaple[0] = Bool(true)
l[0] = Bool(false)
m[0] = Bool(true)
maple[0] = Bool(true)
p[0] = Bool(false)
stageout[0] = Str("m")
a[1] = Bool(true)
e[1] = Bool(false)
globallymaple[1] = Bool(true)
l[1] = Bool(false)
m[1] = Bool(false)
maple[1] = Bool(true)
p[1] = Bool(false)
stageout[1] = Str("a")
a[2] = Bool(false)
e[2] = Bool(false)
globallymaple[2] = Bool(true)
l[2] = Bool(false)
m[2] = Bool(true)
maple[2] = Bool(true)
p[2] = Bool(false)
stageout[2] = Str("m")
a[3] = Bool(true)
e[3] = Bool(false)
globallymaple[3] = Bool(true)
l[3] = Bool(false)
m[3] = Bool(false)
maple[3] = Bool(true)
p[3] = Bool(false)
stageout[3] = Str("a")
a[4] = Bool(false)
e[4] = Bool(false)
globallymaple[4] = Bool(true)
l[4] = Bool(false)
m[4] = Bool(true)
maple[4] = Bool(true)
p[4] = Bool(false)
stageout[4] = Str("m")
a[5] = Bool(true)
e[5] = Bool(false)
globallymaple[5] = Bool(true)
l[5] = Bool(false)
m[5] = Bool(false)
maple[5] = Bool(true)
p[5] = Bool(false)
stageout[5] = Str("a")
a[6] = Bool(false)
e[6] = Bool(false)
globallymaple[6] = Bool(true)
l[6] = Bool(false)
m[6] = Bool(true)
maple[6] = Bool(true)
p[6] = Bool(false)
stageout[6] = Str("m")
a[7] = Bool(true)
e[7] = Bool(false)
globallymaple[7] = Bool(true)
l[7] = Bool(false)
m[7] = Bool(false)
maple[7] = Bool(true)
p[7] = Bool(false)
stageout[7] = Str("a")
a[8] = Bool(false)
e[8] = Bool(false)
globallymaple[8] = Bool(true)
l[8] = Bool(false)
m[8] = Bool(true)
maple[8] = Bool(true)
p[8] = Bool(false)
stageout[8] = Str("m")
a[9] = Bool(true)
e[9] = Bool(false)
globallymaple[9] = Bool(true)
l[9] = Bool(false)
m[9] = Bool(false)
maple[9] = Bool(true)
p[9] = Bool(false)
stageout[9] = Str("a")
^C