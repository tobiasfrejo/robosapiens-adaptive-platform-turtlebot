# Docker Compose file to run an MQTT broker and the MQTT publisher
version: '3.10'

services:
  emqx-enterprise:
    image: emqx/emqx-enterprise:5.0.4
    container_name: emqx
    healthcheck:
      test: [ "CMD", "emqx", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 12
    ports:
      - 1883:1883
      - 18083:18083
    volumes:
      - type: bind
        source: ./../../../../Resources/acl.conf
        target: /opt/emqx/etc/acl.conf

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./data:/data
      - ./../../../../../Resources/redis.conf:/usr/local/etc/redis/redis.conf

  monitor:
    build:
        context: ./../../Nodes/Monitor
        dockerfile: ./Dockerfile
    container_name: C_Monitor
    depends_on:
        emqx-enterprise:
            condition: service_healthy
    environment:
      - BROKER=emqx

  analysis:
    build:
        context: ./../../Nodes/Analysis
        dockerfile: ./Dockerfile
    container_name: C_Analysis
    depends_on:
        emqx-enterprise:
            condition: service_healthy
    environment:
      - BROKER=emqx

  plan:
    build:
        context: ./../../Nodes/Plan
        dockerfile: ./Dockerfile
    container_name: C_Plan
    depends_on:
        emqx-enterprise:
            condition: service_healthy
    environment:
      - BROKER=emqx

  execute:
    build:
        context: ./../../Nodes/Execute
        dockerfile: ./Dockerfile
    container_name: C_Execute
    depends_on:
        emqx-enterprise:
            condition: service_healthy
    environment:
      - BROKER=emqx


networks:
  emqx-net:
    name: emqx-net